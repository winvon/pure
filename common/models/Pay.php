<?php

namespace common\models;

use common\libs\Constants;
use Yii;

/**
 * This is the model class for table "{{%pay}}".
 *
 * @property int $id
 * @property int $order_id
 * @property string $pay_money
 * @property string $pay_img
 * @property int $pay_type 1;线下;2微信支付
 * @property int $created_at
 */
class Pay extends \yii\db\ActiveRecord
{

    const PAY_TYPE_INLINE = 1;//线下
    const PAY_TYPE_WECHAT = 2;//微信

    public static function getPayTypeItems($key = null)
    {
        $items = [
            self::PAY_TYPE_INLINE => yii::t('app', '线下'),
            self::PAY_TYPE_WECHAT => yii::t('app', '微信'),
        ];
        return Constants::getItems($items, $key);
    }


    const STATUS_CONFIRM = 1;
    const STATUS_CONFIRMED = 2;
    const STATUS_NOT = 3;


    public static function getStatusItems($key = null)
    {
        $items = [
            self::STATUS_CONFIRM => yii::t('app', '待确认'),
            self::STATUS_CONFIRMED => yii::t('app', '已支付'),
            self::STATUS_NOT => yii::t('app', '审核失败'),
        ];
        return Constants::getItems($items, $key);
    }


    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%pay}}';
    }

    public function beforeSave($insert)
    {
        $this->created_at = time();
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['order_id', 'pay_type', 'created_at'], 'integer'],
            [['pay_money'], 'number'],
            [['pay_img'], 'string', 'max' => 225],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'order_id' => 'Order ID',
            'pay_money' => 'Pay Money',
            'pay_img' => 'Pay Img',
            'pay_type' => 'Pay Type',
            'created_at' => 'Created At',
        ];
    }

    /**
     * @return \yii\db\ActiveQuery
     */
    public function getOrder()
    {
        return $this->hasOne(Order::className(), ['id' => 'order_id']);
    }

    public function afterFind()
    {
        parent::afterFind();
        if ($this->pay_img) {
            /** @var TargetAbstract $cdn */
            $cdn = yii::$app->get('cdn');
            $this->pay_img = $cdn->getCdnUrl($this->pay_img);
        }
    }
}
